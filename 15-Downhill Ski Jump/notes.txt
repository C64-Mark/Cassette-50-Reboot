1 POKE53281,0:POKE53280,0:PRINT"{clear}{down*5}{right*9}{green}***- {white}please wait {green}-***":POKE54272,21:CLR:HS=0:DIMFR(35):DIMDR(35):GOSUB10000:A$(1)="{green} #$":A$(2)="{green}#%%$":A$(3)="{green}%%%%":A$(4)="{brown} &'":B$(1)="{black}{space*3}(":B$(2)="{gray})++++*":B$(3)="{dark gray}++++++":B$(4)="{dark gray}+,++,+":B$(5)="{dark gray}++.-++
Border and background = black:v1 freq=21. hs= ,fr=frequency, dr=duration
a$(1-4)=tree, b$(1-5)=house

6 D$(1)="{red} 456 ":D$(2)="{red}2%%%3":D$(3)="{white}{space*2}%":E$="101010101010":F$(1)="{blue}7:":F$(2)="{blue}8;":F$(3)="{blue}9<":G$(1)="{space*5}{blue}=":G$(2)=" {white}++{red}+{white}++*":G$(3)=" {white}+{red}+++{white}++++":G$(4)=" {white}++{red}+{white}+++++":G$(5)=" {black} >{space*4}>":POKE53281,0:POKE53280,0
d$(1-3)=mushroom, e$=ice shelf. f$(1-3)=ant, g$(1-5)=ambulance


11 M1=54296:M2=54277:M3=54278:M4=54276:M5=54273:M6=54272:M7=54272
SID memory locations


15 SL=1:V=53248:GOSUB6000:SL=7-SL:POKEV+23,0:POKEV+29,0:P=0:L=0:H=1:H2=1:POKEV+21,0:POKE53280,15:POKE53281,15
SL=1 - skill level, v=vic memory location. title screen routine. D017 SprYexpand=0 .D01d sprxexpand=0.
P=distance travelled L=lives, h=level, h2=temp level
D015 spren=0. D020 border=grey, D021 bgcol0=grey


25 I=1:S=12:S1=24:SX=5:IX=.5:A=150:TE=2:AX=0:RD=0:POKEV+41,2:PRINT"{clear}":IFDEMO=1THENPRINT"{right*11}{green}demo mode.":FORU=1TO2000:NEXT:GOTO35
I=index S=tab1 S1=tab2 SX=dir change IX=offset A=player x position TE=player direction AX=player x MSB flag RD=level counter
D029 spr2col=red. Clear and if demo mode print demo mode, pause and skip next line

33 POKEV+21,4:POKEV+4,150:POKEV+5,100:POKE2042,193
Not demo mode, so D015 spren=sprite 2, D004 spr2X=150, D005 spr2Y=100. Sprite frame = 1 (193)


35 POKEM1,15:POKEM2,10:POKEM3,200:POKEM4,17:FORU=1TO3:POKEM5,50:POKEM6,100:FORU1=1TO600:NEXT:POKEM5,0:POKEM6,0:FORU1=1TO500:NEXT:NEXT:POKEM5,100:POKEM6,100:FORU1=1TO400:NEXT:TI$="000000":POKEM5,0:POKEM6,0:PRINT"{clear}{down*29}";:POKE53272,(PEEK(53272)AND240)+12:IFH=8THENI=0:S=10
vol=15, att=0, dec=10, sus=12, release=8, vcr1=triangle, gate on. v1freqhi=50, v1freqlo=100 - and off again, to create starting pips. freqhilo=100 - end of starting pips.
reset timer. freq hi/lo=0. Clear screen, down beyond bottom of screen. Char memory at $3000 (12288), screen memory remains at 0400
if level=8 then I=0, S=10....?


103 IFH=2THENPRINT"{white}!!!!!!!!!!!!!!{space*7}!!!!!!!!!!!!!!!!!!
On level 2, creates a smaller opening

104 IFH=6THENPRINT"{blue}!!!!!!!!!!!!!!!!!{space*6}!!!!!!!!!!!!!!!!
on level 6, creates a smaller opening

105 IFDEMO=0THEN110
if demo mode off then skip next bit

***DEMO ROUTINE***
107 IFPEEK(197)<>64THEN15
on any key press, exit demo mode

108 ONHGOSUB2000,3100,3000,2500,3200,3300,3400,3500,3600,3700,3800:FORU=1TO60:NEXT:POKEM5,0:POKEM6,0:GOTO107
Play through gameloop, turn sound off, repeat

***MAIN GAME ROUTINE***
110 POKE(V+31),0:POKEV+4,A:POKEV+5,100:POKEV+21,4:AM=A
D01F - clear sprite to background collision. D004 = spr2x set to A. Spr2Y=100. D015 spren=spr4. AM+?

120 P=P+1:POKEV+16,AX*4:POKEV+4,AM:K=PEEK(56320):POKEM5,0:POKEM6,0:IF(TE=2ANDK=123)THENTE=1:GOTO1100
P=? D010=AX (sprxMSB on/off). D004 = spr2X=AM. K=joystic input. freq hi/lo=0. 
K=123, bit 2 and 7 off. so bit 2 =left. So switch sprite frame if not already left and jump to sprite update code (1100)

350 IF(TE=1ANDK=119)THENTE=2:GOTO1130
Similarly if frame=1 and right is pressed (bit 3 is off) then switch frame and run update code (1130)

360 A=A+(SLANDTE=2)-(SLANDTE=1):IFPEEK(V+31)<>0THEN5000
Change player X position dependent on direction (TE) and difficulty level (1-4.5)
Check D01F spr to background collision and if collision has happened (<>0) go to player death routine (5000)

600 AX=INT(A/256):AM=A-AX*256:ONHGOSUB2000,3100,3000,2500,3200,3300,3400,3500,3600,3700,3800:GOTO120
Set sprXMSB based on X position. Set x pos relative to MSB.
Main gameloop

1100 POKE2042,194:POKEM4,129:POKEM5,100:POKEM6,100:GOTO360
Set sprite pointer to frame 2. v1 reg=noise and gate on. Freq hi/lo = 100. Return to main loop
 
1130 POKE2042,193:POKEM4,129:POKEM5,100:POKEM6,100:GOTO360
Set sprite pointer to frame 1. v1 reg=noise and gate on. Freq hi/lo = 100. Return to main loop


***ROUTINE: TREES (H=1)***
2000 IFTI$>"000006"ANDI=1THENH=3:S=1+INT(RND(0)*32):RETURN
If game is after 6 seconds and char Index=1 then set H=3 (house routine) and S to random tab and return

2010 PRINT"{purple}!"TAB(S)A$(I)TAB(38)"{purple}!":RD=RD+1:I=I+1:IFI<5THEN2023
Otherwise display barriers at either side of slope. Print a row of tree gfx at random X position (S)
RD increases - which is the level position. If we haven't completed the tree (Index=5) then skip next line

2021 I=1:S=1+INT(RND(0)*34):POKEM4,17:POKEM5,30:POKEM6,100
char index returns to 1: Set a new random X plot positon. Triangle, gate on (D404), v1freqhi=30, freqlo=100

2023 IFRD<120THENRETURN
If we haven't reach the end of this level, return to our main gameloop

2030 IFI=1THENH=2:RD=0:GOTO4000
If Index=1 then move on to next level (H=2). Reset game level position. Jump to end of level routine
otherwise drop through to house routine


***ROUTINE: TREES2 (H=4)
2500 IFTI$>"000006"ANDI=1THENH=3:S=1+INT(RND(0)*32):RETURN
Every 6 seconds we display a house at next available index. Set random col position

2510 PRINT"{purple}!"TAB(S)A$(I)TAB(S1)A$(I)TAB(38)"{purple}!":RD=RD+1:I=I+1:IFI<5THEN2533
Print a row of tree gfx (2 trees) with barriers either side. Incremement progress counter. If we haven't finished the tree, skip the next bit


2531 S=1+INT(RND(0)*15):S1=19+INT(RND(0)*15):I=1:POKEM4,33:POKEM5,40:POKEM6,100
Set random tab positions for tree 1 and tree 2. D404 sawtooth, gate on. Freqhi/lo = 40, 100

2533 IFRD<100THENRETURN
If game progress counter<100 return

2535 IFI=1THENH=5:S=5:I=2:RD=0:POKE53281,15:POKE53280,15:POKEM4,33
Otherwise, if index is 1 then set level to ice shelf (H=5). Tab position=5 and index=2. Reset progess counter. Background/border = greay
Sawtooth D404 gate on

2540 RETURN
return to main gameloop


***ROUTINE: HOUSE (H=3)***
3000 POKEM4,17:POKEM5,(I*10):POKEM6,(I*10):PRINT"{purple}!"TAB(S)"{dark gray}"B$(I)TAB(38)"{purple}!":I=I+1:IFI<6THENRETURN
VCR1 D404=Triangle, gate on. D400/D401 freq hi/lo based on I. Print house at randome X location (S). If house not complete then return

3040 H=H2:TI$="000000":I=1:S=10:S1=20:RETURN
H takes value of H2 (so if on level1 still, we go back to trees). Reset timer. I=1. Tab position=10, tab position 2=20. Return



***ROUTINE: MOUNTAIN PASS (H=2)***
3100 PRINTTAB(S)"{blue}%%{space*7}%%":RD=RD+1:I=I+1:IFI>SXTHENIX=-IX:SX=INT(RND(0)*15):I=0
Print edges of mountain pass at tab S. Increase level counter. First 5 rows in one direction. The SX rand direction counter

3140 S=S+IX:IFS<3ORS>24THENIX=-IX
Increase S by offset (either -0.5 or 0.5). If close to edges of screen then change direction.

3143 IFRD<100THENRETURN
If level counter <100, then continue on this level

3145 H=4:H2=4:POKE53281,3:POKE53280,3:RD=0:S=4:S1=33:I=1:TI$="000000":RETURN
Move to next level (Forest H=4). Border and background = red. Reset level counter.Tabs = 4 and 33.Index=1. Reset timer and return


***ROUTINE: ICE SHELF (H=5)
3200 IFI>1THEN3220
if index>1 then skip print ice shelf

3211 PRINT"{purple}!"TAB(S)"{white}"E$TAB(38)"{purple}!":GOTO3225
print ice shelf, and skip blank row

3220 PRINT"{purple}!"TAB(38)"{purple}!":POKEM1,15-I
print blank row. Set volume to decrease based on I increasing

3225 POKEM1,15-I:POKEM4,33:POKEM5,20:POKEM6,100:RD=RD+1:I=I+1:IFI>10THENS=INT(RND(0)*27):I=1
Volume decrease based in I. D404 sawtooth, gate on. freqhilo=20, 100: increase level counter. Increase index.
If index is over 10 then reset index and set random tab position for next shelf.


3236 IFRD>80ANDI=8THENH=7:H2=7:RD=0:I=0:POKE53281,12:POKE53280,12:VL=15
If level position is greater than 80 and index=8 (i.e. some space) then move to level mushrooms (H=7)
Reset level counter and index. background and border=grey2. VL=15 - volume level

3240 RETURN


***ROUTINE: GRASS/SOD (H=6)***
3300 RD=RD+1:IFRD>=85ANDRD<100THENPRINT"{purple}!"TAB(38)"{purple}!":RETURN
If towards end of level, then just print barriers

3306 POKEM4,33:POKEM5,10:POKEM6,100:POKEM1,VL:VL=VL-2:IFRD>=100THENRD=0:H=8:H2=8:I=1:S=15:POKE53281,3:POKE53280,3:POKEM1,15:RETURN
sawtooth, gate on. Freq hi/lo = 10,100: Set volume to VL and decrease VL by 2.
If end of level (RD>100) then set next level to city (H=8). Reset index, set tabl to 15. Border and background to red. Vol to 15. Return

3310 IFI<=7THENPRINT"{space*12}{gray}%{green}%%%%{space*6}{gray}%":VL=15:GOTO3350
if index is less than 8 then print grass space on left and set volume to 15. Skip to end of section

3320 IF(I>7ANDI<=13)OR(I>20ANDI<27)THENPRINT"{space*12}{gray}%{space*10}%":GOTO3350
if index is between 8 and 13 or between 20 and 27 then print space, skip to end of section

3330 IFI>13ANDI<=20THENPRINT"{space*12}{gray}%{space*6}{green}%%%%{gray}%":VL=15
if index is between 13 and 20 then print grass space on right and set vol to 15

3350 I=I+1:IFI=26THENI=1
Increase index and loop back to 1 if we hit 26

3360 RETURN
end sub


***ROUTINE: MUSHROOMS (H=7)***
3400 RD=RD+1:IFRD>140ANDI=0THEN3455
Increase game level counter. If it's over 140 and index=0 then skip to end of level (3455)

3415 IFRD>116THENPRINT"{black}!"TAB(38)"{black}!":RETURN
If level counter>116 (i.e. close to end) then print black borders and return

3420 POKEM4,17:POKEM5,15-(I*2):POKEM6,20:PRINT"{black}!"TAB(S)D$(I)TAB(38)"{black}!":I=I+1:IFI=4THENI=0:S=1+INT(RND(0)*33)
Triangle waveform, gate on. freq HI change based on I, freqlo=20. Print black border and a row of mushroom graphics.
If index=4 then reset index and set random tab for next mushroom

3440 RETURN

3455 I=8:H=6:H2=6:RD=0:GOTO4100
Set index to 8 and level to grass/sod level (H=6). Jump to end of level & extra life routine

3490 RETURN
Orphaned


***ROUTINE:CITY (H=8)***
3500 I=I+1:RD=RD+1:IFRD>100ANDI>5THENH=9:H2=9:RD=0:I=3:RETURN
Increase index and level position. If end of level then set level to slalom (H=9) and reset counter. Set index to 3. Return

3530 IFI>5THENI=1:S=1+INT(RND(0)*32)
If index is greater than 5 then reset to 1. Set random tab position (S)

3540 PRINT"{purple}!"TAB(S)B$(I)TAB(38)"{purple}!":POKEM4,33:POKEM5,(I*2):POKEM6,20:POKEM2,10:RETURN
Print a house. sawtooth gate on. freqhi based on I. freqlo=20. set attack/decay to 10


***ROUTINE:SLALOM (H=9)***
3600 IFI=2THENPRINT:GOTO3640
if index=2 then print blank row and skip to 3640 (don't think this line is reached because of i=3 above)

3610 IFI>2THENPRINT"{dark gray}!"TAB(38)"{dark gray}!":GOTO3640
if index>2 then print borders and skip next line

3630 FORU=1TOS:PRINT"{green}%";:NEXT:PRINT"{blue}!{space*7}!";:FORU=1TO39-S-9:PRINT"{green}%";:NEXT
print slalom edges

3640 I=I+1:IFI=18THENI=1:S=1+INT(RND(0)*19)
Reset index on I=18 and re-rand slalom tab space

3650 RD=RD+1:IFRD<100THENRETURN
increment level counter. Return if not near end of level

3655 IFRD<130THENI=16:RETURN
print straight empty space for last section of level

3690 H=10:H2=10:RD=0:I=1:S=10:S1=20:POKE53281,15:POKE53280,15:RETURN
End of level. Set level to ants (H=10). Reset index and counter. Set tab1 to 10 and tab2 to 20. Border and bg=grey3


***ROUTINE: ANTS (H=10)***
3700 RD=RD+1:IFRD<160THEN3715
increase level counter. If not end of level then skip next line

3712 H=11:H2=11:RD=0:I=0:S=5:S1=25:POKE53281,12:POKE53280,12:RETURN
End of level. Set level to mushroom field (H=11). Reset counter and index and set tab pos to 5 and 25. Border & bg=gray2

3715 IFRD>132THENPRINT"{purple}!"TAB(38)"{purple}!":RETURN
If last secion of the level then print empty space

3720 PRINT"{purple}!"TAB(S)F$(I)TAB(S1)F$(I)TAB(38)"{purple}!":I=I+1:IFI<4THENRETURN
Print 2 ants spaced apart from S and S1. Increment index and return if <4

3735 I=1:S=1+INT(RND(0)*15):S1=19+INT(RND(0)*17):POKEM4,129:POKEM5,15-(I*2):POKEM6,10:POKEM2,10:RETURN
Reset index and re-rand tab positions. Noise gate on. freqhi change based on I. freq lo=10. AttDec = 10


***ROUTINE: MUSHROOM FIELD (H=11)***
3800 RD=RD+1:IFRD>116ANDRD<=140THENPRINT"{purple}!"TAB(38)"{purple}!":RETURN
Increase level counter. If near end of level then just print clear space and return

3810 IFRD>140THEN3890
If end of level skip to 3890

3815 POKEM4,17:POKEM5,15-(I*2):POKEM6,20:POKEM2,10:PRINT"{purple}!"TAB(S)D$(I)TAB(S1)D$(I)TAB(38)"{purple}!":I=I+1:IFI=4THENI=0:S=1+INT(RND(0)*15):S1=19+INT(RND(0)*15)
Triangle, gate on. freqlo decrease based on I. freqhi=20. attdec=10. Print 2 mushrooms spaced by S and S1. Increase index. if index=4 then reset and re-rand S and S1

3840 RETURN

3890 IFDEMO=1THEN15
If demo mode then jump back to menu

3895 FORU=1TO500:NEXT:H=1:H2=1:P=P+50:RD=0:I=1:S=10:S1=20:L=L-1:RETURN
if not demo mode then pause. Reset level back to beginning (H=1), increase P (points?) by 50. Reset counter and index.
Set tabls to 10 and 20. Increase lives.

***ROUTINE: End of level A***
4000 POKE53281,14:POKE53280,14:I=1:S=13:PRINT"{white}!!!!!!!!!!!!!!{space*8}!!!!!!!!!!!!!!!!!":POKEM4,17:FORU=100TO10STEP-1:POKEM5,U:POKEM6,UL:NEXT:FORU=50TO80:POKEM5,U:POKEM6,UL:NEXT:RETURN
background and border = lightblue. Reset index. Set tab to 13. Print short opening to next section. triangle gate on. set freqhi decreasing based on U. freq low = UL?

***ROUTINE: End of level B***
4100 POKE53280,13:POKE53281,13:I=1:POKEV+39,2:POKEV+40,2:L=L-1:IFH=6THENPRINT"{blue}!!!!!!!!!!!!!!!!!{space*6}!!!!!!!!!!!!!!!!":RETURN
background and border=light green. Index=1. D027 spr0col=red, D028 spr1col=red. Decrease L (extra life?) If level(H)=6 then print gateway & return

4435 E2=39
Orphaned and redundant code


***ROUTINE: PLAYER CRASH***
5000 POKEV+41,11:UM=200:POKEM1,15:POKEM2,10:POKEM3,200:POKEM4,17:POKE2042,195:FORU=100TO200STEP1:IFAX<>0THENPOKEV+16,4
D029 sprcol2=darky grey. UM=200 (freq init) vol=15, attdec=10, susrel=200, triangle gate on. Set sprite frame to crashed (frame 3).
set decreasing loop on U (for player Y in crash), set XMSB if AX>1 (should already be set).

5036 POKEM5,UM:POKEM6,100:POKEV+4,AM:POKEV+5,U:UM=UM-2:NEXTU:POKEM4,129:FORU1=15TO1STEP-.1:POKEM1,U1:POKEM5,30:POKEM6,100:NEXT:POKEM5,0:POKEM6,0:FORU1=1TO500:NEXT:POKEV+21,0:L=L+1:IFL<3THENPOKEV+21,0:POKEV+16,0:GOTO25
freqhi=um, freqlo=100. D004 spr4xpos=AM, D005 sprypos=U. Decrease frequency by 2. Loop.
noise gate on. Decrease volume in loop. freqhi=30 freqlo=100.
Switch off sound. Wait. Switch off sprite. Decrease lives (increase L, but is life lost).
If L<3 (i.e. we have lives left, then loop back to main game loop (after switching sprites off again, and resetting XMSB

5100 PRINT"{clear}":AM=20:FORU=1TO30:PRINT"{home}{down*17}"TAB(U)G$(1):PRINTTAB(U)G$(2):PRINTTAB(U)G$(3):PRINTTAB(U)G$(4):PRINTTAB(U)G$(5):FORU1=1TO100:NEXT:POKEV+21,0:POKEM1,15:POKEM4,33:POKEM5,AM:POKEM6,100:IFAM=20THENAM=15:GOTO5180
Drop through to hear if no lives left. Clear screen. AM=20 for freqhi. Print ambulance moving across screen
sprites disabled (again!). vol=15, sawtooth gate on, freqhi/lo = AM, 100. If AM=20 then set it to 15 and skip next line

5170 IFAM=15THENAM=20
if AM=15 then set back to 20. This is for the siren effect on the ambulance

5180 NEXT:POKEM5,0:POKEM6,0:POKE53272,21:PRINT"{clear}":POKE53280,15:POKE53281,15:PRINTCHR$(14):PRINT"{blue}{right*13}W-I-P-E{space*2}O-U-T ":PRINT"{down*3}{green}You were splatted by the "NS$(H):IFH=3THENH=H2
Loop siren. sound off. Switch vicbank back (so we can print text). CLear. Border and backgroun to grey.
DIsplay end message including level of death N$(H). If H=3 then it becomes 2 for some reason

5230 PRINT"{down*3}{red}You covered:{green}"P"{red}metres.":PRINT"{purple}{down*3}Longest distance covered is{gray}";:IFHS<PTHENHS=P
Display distance travelled (P) and check against high-score

5237 PRINTHS"{purple}metres.":FORU=1TO22STEP2:POKEM5,FM(U):POKEM6,100:FORU1=1TOFM(U+1):NEXT:POKEM5,0:POKEM6,0:NEXT:FORU=1TO3000:NEXT:PRINT"{down*5}{blue}{space*13}{reverse on} Press fire. ":U=0
Play death march ditty using FM in freqhi, freqlo=100. Play for duration from FM+1. Sound off. Pause. Press fire to restart message

5260 IFPEEK(56320)=111THEN11
if fire is pressed then return to menu

5270 U=U+1:IFU<1500THENGOTO5260
5280 GOTO11
if fire isn't pressed then return to menu after a short while anyway

***ROUTINE: TITLE SCREEN***
6000 POKEV+23,4:POKEV+29,4:POKEV+41,2:POKEV+21,0:POKEV+16,0:PRINT"{clear}":POKE53272,21:POKE53281,12:POKE53280,12:TI$="000000":C=1:U=1
D017 = expand spr2Y, D01D = expand spr2X, d029 spr2col=red, D015 spren=0, D010 sprxmsb=0.
Clear. D021 bg col0=grey, d020 bdcol = grey. Reset timer. C=current colour, U=1 = play opening ditty

6015 PRINTCHR$(COL(C)):PRINT"{home}{space*4}O{cm y}M N{cm y}M {cm g}{space*2}{cm m} O{cm y}M{cm m}{space*2}{cm g}PO{cm m}{space*3}{cm m}":PRINT"{space*4}{cm h} {cm m} {cm g} {cm m} {cm g}{cm m}{cm g}{cm m} {cm g} {cm m*2}{space*2}{cm g}{cm m}{cm g}{cm m}{space*3}{cm m}":PRINTCHR$(COL(C+1));:PRINT"{space*4}{cm g} {cm m} {cm g} {cm m} {cm h}{cm m}{cm g}{cm m} {cm g} {cm m*2}DD{cm g}{cm m}{cm h}{cm m}{space*3}{cm m}":PRINTCHR$(COL(C+2));:PRINT"{space*4}{cm g} {cm m} {cm g} {cm m} {cm h}{cm m}{cm g}{cm m} {cm g} {cm m*2}{space*2}{cm g}{cm m}{cm g}{cm m}{space*3}{cm m}":PRINT"{space*4}L{cm p}N M{cm p}N M{sh @}LN {cm g} {cm m*2}{space*2}{cm g}{sh @}L M{cm p*2} M{cm p*2}
Prints the downhill ski menu title with colour banding set by COL()

6029 PRINT"{down*2}{right*12}{light green}ski jump":PRINT"{down*3}{right*10}{blue}skill level:{red}"(SL*2)-1:PRINT"{home}{down*16}{right*7}{black}{reverse on} push fire to start. ":IFU=1THENGOSUB30000:U=0:TI$="000000
Print rest of title screen, with appropriate skill level (*2). On first load of title screen (U=1) play the music ditty. Switch ditty off and reset timer again.

6060 IFPEEK(56320)=111THENDEMO=0:POKEV+21,0:RETURN
111= bits 4 and 7 off. 7 is error, 4 off=fire button pressed. If so switch off demo mode, d015 spren=0

6065 IFPEEK(197)=1THENSL=SL+.5:IFSL=5.5THENSL=1
Check for press of return key and increments skill level by .5 if so

6070 IFC=2ORC=6THENPRINT"{up}{right*3}{space*35}
On the 2nd and 6th colour this blanks out the press any key text (i.e. creates a flash effect)

6090 IFTI$>"000030"THENDEMO=1:POKEV+21,0:RETURN
after 30 seconds switch on demo mode, D015 spren=0

6100 IFC<=2THENPOKE2042,193:GOTO6115
if colour counter is 0,1,2 then sprite frame = 1

6110 IFC<=5THENPOKE2042,194
if colour counter is 3,4,5 then sprite frame = 2

6115 POKEV+4,130:POKEV+5,200:POKEV+21,4:C=C+1:IFC>5THENC=1
D004 spr2X=130, D005 spr2Y=200. D015 enable sprite 2. Incremement colour counter, loop on 6

6130 GOTO6015
Loop back to display screen


***ROUTINE: INITIALISE***
10000 RESTORE:U=0
U=index for reading data

10014 READFR(U),DR(U):IFFR(U)<>99THENU=U+1:GOTO10014
Read frequency and duration for intro ditty

10020 POKE53269,4:FORU=12352TO12414:READX:POKEU,X:NEXT:FORU=12416TO12478:READX:POKEU,X:NEXT:FORU=12480TO12542:READX:POKEU,X:NEXT:FORU=12544TO12559:READX:POKEU,X:NEXT:FORU=12568TO12791:READX:POKEU,X:NEXT:FORU=1TO8:READX:COL(U)=X:NEXT:DIMFM(23):FORU=1TO22:READFM(U):NEXT:DIMNS$(11):FORU=1TO11:READNS$(U):NEXT:RETURN
Enable sprite 3. Sprites @ $3040. 12352-12414=skier frame 1. 12416-12478=skier frame 2. 12480-12542=skier crashed.


12000 DATA8,300,8,100,8,100,8,100,0,0,0,0,0,0,10,300,10,100,10,100,10,100,0,0,0,0,0,0,12,200,12,200,12,200,10,200,12,200,14,300,14,100,14,100,14,900,0,0,0,0,0,0,14,200,12,200,10,400,12,300,12,100,12,100,12,900,99,99
music data (FR, DR)

20010 DATA0,60,0,0,126,0,0,90,0,0,126,0,0,60,0,0,24,0,0,255,0,0,255,0,0,255,0,0,255,0,0,126,0,0,126,0,0,126,0,0,102,0,0,102,0,1,118,0,0,238,0,0,102,0,0,51,0,0,25,128,0,12,192,0,60,0,0,126,0,0,90,0
21020 DATA0,126,0,0,60,0,0,24,0,0,255,0,0,255,0,0,255,0,0,255,0,0,126,0,0,126,0,0,126,0,0,102,0,0,102,0,0,110,128,0,119,0,0,102,0,0,204,0,1,152,0,3,48,0,2,0,64,3,0,192,1,0,128,0,195,0,0,102,0,0,126,0
22030 DATA0,102,0,0,102,0,0,102,0,0,126,0,0,126,0,0,255,0,0,255,0,0,255,0,0,255,0,0,24,0,0,60,0,0,126,0,0,126,0,0,126,0,0,60,0,
sprite data (3 sprites)

0,0,0,0,0,0,0,0,24,60,60,126,255,24,24,0,1,2,5,14,23,61,63,255
22240 DATA128,192,160,112,216,118,254,126,254,223,255,247,253,255,191,255,15,14,11,15,13,14,13,7,240,208,144,80,208,240,144,224,0,102,102,219,255,255,255,255,1,3,7,15,31,63,127,255,128,192,224,240,248,252,254,255
22320 DATA255,255,255,255,255,255,255,255,24,24,24,255,255,24,24,24,15,15,111,111,15,15,15,255,248,248,248,248,248,248,248,255,96,126,127,127,126,96,96,96,128,192,96,48,24,12,6,1,3,6,12,24,48,96,192,128
22430 DATA15,31,63,127,127,127,127,31,240,248,252,254,254,254,254,248,0,0,0,0,0,7,63,255,0,0,0,0,0,255,255,255,0,0,0,0,0,224,252,255,16,8,6,3,7,7,35,113,219,143,15,15,31,15,15,27,51,97,192,128,0,0,0,0
22530 DATA8,16,160,192,224,224,196,140,219,241,240,240,248,240,240,216,202,134,3,1,0,0,0,0, 60,126,126,255,255,255,255,255,60,126,126,255,255,126,126,60,
char data (30 chars)

5,28,31,151,158,159,5,28
colour data (COL): white, red, blue, dark gray, yellow, cyan, white, red

23010 DATA10,400,10,400,10,150,10,400,12,300,11,150,11,150,10,150,10,150,9,100,10,500,
music data (FM)

TREES,MOUNTAIN PASS,SOD,FOREST,ICE CRACKS,MUSHROOMS,TUNNEL,CITY,SLALOM GATES,ANTS,MUSHROOM FIELD
level description data (N$) - is this even used?


***ROUTINE: Play opening music ditty***
30000 POKEM1,0:POKEM2,0:POKEM3,0:POKEM4,0:POKEM1,15:POKEM2,10:POKEM3,200:POKEM4,33:NN=0
vol=0, v1 ad=0, sr=0, vcr1=off. vol=15, ad=attack=0, decay=10, sr=sustain=12, release=8.vcr1=sawtooth+gate on

30020 POKEM5,FR(NN):POKEM6,10:FORU=1TODR(NN):NEXT:POKEM5,0:POKEM6,0:NN=NN+1:IFFR(NN)<>99THEN30020
freq hi = FR, freq lo=10. DR = note duration. Set freq hi/lo to zero. Repeat until end of song

30040 RETURN